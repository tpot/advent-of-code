{
	// Place your advent-of-code workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Day template": {
		"scope": "clojure",
		"body": [
			"(ns year2016.day$0.core",
			"  (:require [clojure.string :as s]",
			"            [clojure.test :refer [deftest is run-tests]]))",
			"",
			"(def test-input \"resources/year2016/day$0/test-input\")",
			"(def puzzle-input \"resources/year2021/day$0/input\")",
			"",
			"(defn parse-input",
			"  [input]",
			"  (map parse-long (-> (slurp input) s/split-lines)))",
			"",
			"(defn part01",
			"  [input]",
			")",
			"",
			"(deftest test-part01",
			")",
			"",
			"(defn part02",
			"  [input]",
			")",
			"",
			"(deftest test-part02",
			")",
			"",
			"(run-tests)",
		]
	},
	"Reduce function": {
		"scope": "clojure",
		"body": [
			"(reduce",
			" (fn [result input] result)",
			" initial-result",
			" input)",
			"",
		],
	}
}
